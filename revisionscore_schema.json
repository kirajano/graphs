{
  "title": "mediawiki/revision/score",
  "description": "Represents a MW Revision Score event (from ORES).",
  "$id": "/mediawiki/revision/score/2.0.0",
  "$schema": "https://json-schema.org/draft-07/schema#",
  "type": "object",
  "properties": {
    "$schema": {
      "type": "string",
      "description": "A URI identifying the JSONSchema for this event. This should match an schema's $id in a schema repository. E.g. /schema_name/1.0.0\n"
    },
    "meta": {
      "type": "object",
      "required": [
        "id",
        "dt",
        "stream"
      ],
      "properties": {
        "uri": {
          "type": "string",
          "format": "uri-reference",
          "maxLength": 8192,
          "description": "Unique URI identifying the event or entity"
        },
        "request_id": {
          "type": "string",
          "description": "Unique ID of the request that caused the event"
        },
        "id": {
          "type": "string",
          "pattern": "^[a-fA-F0-9]{8}(-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}$",
          "maxLength": 36,
          "description": "Unique ID of this event"
        },
        "dt": {
          "type": "string",
          "format": "date-time",
          "maxLength": 128,
          "description": "Event datetime, in ISO-8601 format"
        },
        "domain": {
          "type": "string",
          "description": "Domain the event or entity pertains to",
          "minLength": 1
        },
        "stream": {
          "type": "string",
          "description": "Name of the stream/queue/dataset that this event belongs in",
          "minLength": 1
        }
      }
    },
    "database": {
      "description": "The name of the wiki database this event entity belongs to.",
      "type": "string",
      "minLength": 1
    },
    "performer": {
      "description": "Represents the user that performed this change.",
      "type": "object",
      "required": [
        "user_text",
        "user_groups",
        "user_is_bot"
      ],
      "properties": {
        "user_id": {
          "description": "The user id that performed this change.  This is optional, and will not be present for anonymous users.\n",
          "type": "integer"
        },
        "user_text": {
          "description": "The text representation of the user that performed this change.",
          "type": "string",
          "minLength": 1
        },
        "user_groups": {
          "description": "A list of the groups this user belongs to.  E.g. bot, sysop etc.",
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "user_is_bot": {
          "description": "True if this user is considered to be a bot at the time of this event. This is checked via the $user->isBot() method, which considers both user_groups and user permissions.\n",
          "type": "boolean"
        },
        "user_registration_dt": {
          "description": "The datetime of the user account registration. Not present for anonymous users or if missing in the MW database.\n",
          "type": "string",
          "format": "date-time",
          "maxLength": 128
        },
        "user_edit_count": {
          "description": "The number of edits this user has made at the time of this event. Not present for anonymous users.\n",
          "type": "integer",
          "minimum": 0
        }
      }
    },
    "scores": {
      "description": "List of ORES score objects. Each model uses the model name as a map key and was used to score this revision.  Example: {\n  \"awesomeness\": {\n    \"model_name\": \"awesomeness\"\n    \"model_version\": \"1.0.1\",\n    \"prediction\": [\"yes\", \"mostly\"],\n    \"probability\": {\n      \"yes\": 0.99,\n      \"mostly\": 0.90,\n      \"hardly\": 0.01\n    }\n  }\n}\n",
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "required": [
          "model_name",
          "model_version",
          "prediction",
          "probability"
        ],
        "properties": {
          "model_name": {
            "description": "The name of the model used for this score.",
            "type": "string"
          },
          "model_version": {
            "description": "The version of the model used for this score.",
            "type": "string"
          },
          "prediction": {
            "description": "A list of predictions made by this model.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "probability": {
            "description": "A list of probabilities made by this model. Each element is a key/value with a probability name and a probability value.\n",
            "type": "object",
            "additionalProperties": {
              "type": "number"
            }
          }
        }
      }
    },
    "errors": {
      "description": "Errors that occured when models attempted to score this revision. Each error uses the model name as a map key.",
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "required": [
          "model_name",
          "model_version",
          "type",
          "message"
        ],
        "properties": {
          "model_name": {
            "description": "The name of the model that encountered this error.",
            "type": "string"
          },
          "model_version": {
            "description": "The version of the model that encountered this error.",
            "type": "string"
          },
          "type": {
            "description": "The short name of this error",
            "type": "string"
          },
          "message": {
            "description": "A human-readable explanation of what went wrong",
            "type": "string"
          }
        }
      }
    }
  }
}
